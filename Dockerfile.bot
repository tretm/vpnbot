##################################
# STEP 1 build executable binary #
##################################

# golang alpine 1.21.0
FROM golang:1.21.0-alpine AS builder

# Install SSL ca certificates.
# Ca-certificates is required to call HTTPS endpoints.
RUN apk update && apk add --no-cache ca-certificates tzdata && update-ca-certificates

# Create appuser
ENV USER=bot
ENV UID=10011
# See https://stackoverflow.com/a/55757473/12429735RUN
RUN adduser \
    --disabled-password \
    --gecos "" \
    --home "/nonexistent" \
    --shell "/sbin/nologin" \
    --no-create-home \
    --uid "${UID}" \
    "${USER}"

# Preapre code
WORKDIR $GOPATH/src/bot
COPY . .
#RUN go mod vendor
#RUN go mod verify

# Build binary
ARG RELEASE=0.0.0
ARG GOOS=linux
ARG GOARCH=amd64
RUN CGO_ENABLED=0 GOOS=$GOOS GOARCH=$GOARCH go build -ldflags="-w -s -X main.RELEASE=${RELEASE}" -o /go/bin/bot cmd/bot/main.go
RUN chmod +x /go/bin/bot

# Prepare config

COPY config.yaml /go/bin/config.yaml

##############################
# STEP 2 build a small image #
##############################
FROM scratch

# Setup correct timezone
ENV TZ=Asia/Bangkok

# Import from the builder.
COPY --from=builder /usr/share/zoneinfo /usr/share/zoneinfo
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/
COPY --from=builder /etc/passwd /etc/passwd
COPY --from=builder /etc/group /etc/group

# Copy our static executable.
COPY --from=builder /go/bin/bot /go/bin/bot
# Copy configuration file
COPY --from=builder /go/bin/config.yaml config.yaml

# Use an unprivileged user.
USER bot:bot

# Run the hello binary.
CMD ["/go/bin/bot"]